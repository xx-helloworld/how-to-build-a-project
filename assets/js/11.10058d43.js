(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{221:function(n,e,a){"use strict";a.r(e);var s=a(2),r=Object(s.a)({},function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"yarn-workspace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn-workspace","aria-hidden":"true"}},[n._v("#")]),n._v(" yarn workspace")]),n._v(" "),a("p",[n._v("在项目中，经常会出现项目嵌套的情况出现, A依赖B, 例如很多大项目都需要一个工具库等，yarn workspace解决了这个问题")]),n._v(" "),a("p",[n._v("yarn workspace 2个必要条件")]),n._v(" "),a("ul",[a("li",[n._v("private: true")]),n._v(" "),a("li",[n._v("workspace: {}")])]),n._v(" "),a("p",[n._v("首先设置一下外层的package.json")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('"private": true,\n"workspaces": [\n    "common",\n    "server"\n]\n')])])]),a("p",[n._v("配置完以后")]),n._v(" "),a("ul",[a("li",[n._v("所有依赖都会安装在全局")]),n._v(" "),a("li",[n._v("子项目可以嵌套依赖，common和server")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// common/index.js\n\nmodule.exports = () => {\n    console.log("hello xxtest")\n}\n\n// server/package.json\n\n"dependencies": {\n    "common": "1.0.0"\n}\n\n// server/index.js\n\nconst commonfn = require("common")\n\ncommonfn()\n\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("yarn install\n\nnode server/index.js\n\n// hello xxtest\n\n")])])]),a("p",[n._v("也可以用yarn link或者npm link的方式解决。")])])},[],!1,null,null,null);e.default=r.exports}}]);