(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{213:function(a,e,t){"use strict";t.r(e);var s=t(2),r=Object(s.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"ts-lerna"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ts-lerna","aria-hidden":"true"}},[a._v("#")]),a._v(" .. + ts + lerna")]),a._v(" "),t("h2",{attrs:{id:"ts-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ts-配置","aria-hidden":"true"}},[a._v("#")]),a._v(" ts 配置")]),a._v(" "),t("p",[a._v("tsconfig 可以根据每个子项目不同配置，也可以只在外层配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('"extends": "../../tsconfig.json",\n\n')])])]),t("h2",{attrs:{id:"lerna-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lerna-配置","aria-hidden":"true"}},[a._v("#")]),a._v(" lerna 配置")]),a._v(" "),t("p",[a._v("配置 "),t("code",[a._v("lerna")]),a._v(" 可以在最外层输入build命令同时 "),t("code",[a._v("build packages")]),a._v(" 内的子项目, "),t("code",[a._v("lerna")]),a._v(" 是专门为配置 "),t("code",[a._v("monorepo")]),a._v(" 项目所服务的，单独使用lerna也可以不需要配置"),t("code",[a._v("package.json")]),a._v("中的"),t("code",[a._v("packages")]),a._v(", "),t("code",[a._v("lerna")]),a._v(" 内部会有配置. 而且采用 "),t("code",[a._v("lerna")]),a._v(" 也可以搭配 "),t("code",[a._v("npm")]),a._v(" 一起使用. 可以说部分功能和 "),t("code",[a._v("yarn workspace")]),a._v(" 有些重合.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('"scripts": {\n    "build": "lerna run build"\n  },\n\n')])])])])},[],!1,null,null,null);e.default=r.exports}}]);